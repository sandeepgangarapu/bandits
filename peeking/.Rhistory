sd_hte_utility = sd(m_hte_utility))
c <- b %>% gather(utility_type, mean_utility, mean_actual_utilty:mean_hte_utility)
d <- b %>% gather(utility_type, sd_utility,sd_actual_utilty:sd_ate_utility)
b
d <- b %>% gather(utility_type, sd_utility, sd_actual_utilty:sd_hte_utility)
b <- b %>% summarise(mean_actual_utilty = mean(m_actual_utilty),
mean_ate_utility = mean(m_ate_utility),
mean_hte_utility = mean(m_hte_utility))
a <- train_utility %>% select(iteration, actual_group, actual_value) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utilty = mean(actual_value)) %>% group_by(iteration) %>% summarise(max_actual_utilty = max(m_actual_utilty))
b <- main_utility %>% select(iteration, actual_value, first) %>% group_by(iteration) %>%
summarise(m_actual_utilty = mean(actual_value), m_hte_utility = mean(first))
b['m_ate_utility'] = a["max_actual_utilty"]
b <- b %>% summarise(mean_actual_utilty = mean(m_actual_utilty),
mean_ate_utility = mean(m_ate_utility),
mean_hte_utility = mean(m_hte_utility))
c <- c %>% summarise(sd_actual_utility = sd(m_actual_utilty),
sd_ate_utility = sd(m_ate_utility),
sd_hte_utility = sd(m_hte_utility))
a <- train_utility %>% select(iteration, actual_group, actual_value) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utilty = mean(actual_value)) %>% group_by(iteration) %>% summarise(max_actual_utilty = max(m_actual_utilty))
b <- main_utility %>% select(iteration, actual_value, first) %>% group_by(iteration) %>%
summarise(m_actual_utilty = mean(actual_value), m_hte_utility = mean(first))
b['m_ate_utility'] = a["max_actual_utilty"]
c <- b %>% summarise(mean_actual_utilty = mean(m_actual_utilty),
mean_ate_utility = mean(m_ate_utility),
mean_hte_utility = mean(m_hte_utility))
d <- b %>% summarise(sd_actual_utility = sd(m_actual_utilty),
sd_ate_utility = sd(m_ate_utility),
sd_hte_utility = sd(m_hte_utility))
c
c <- c %>% gather(utility_type, mean_utility, mean_actual_utilty:mean_hte_utility)
d <- d %>% gather(utility_type, sd_utility, sd_actual_utilty:sd_hte_utility)
d
d <- b %>% summarise(sd_actual_utility = sd(m_actual_utilty),
sd_ate_utility = sd(m_ate_utility),
sd_hte_utility = sd(m_hte_utility)) %>% gather(utility_type, sd_utility, sd_actual_utilty:sd_hte_utility)
d <- b %>% summarise(sd_actual_utility = sd(m_actual_utilty),
sd_ate_utility = sd(m_ate_utility),
sd_hte_utility = sd(m_hte_utility)) %>% gather(utility_type, sd_utility, sd_actual_utility:sd_hte_utility)
c <- b %>% summarise(mean_actual_utilty = mean(m_actual_utilty),
mean_ate_utility = mean(m_ate_utility),
mean_hte_utility = mean(m_hte_utility)) %>% gather(utility_type, mean_utility, mean_actual_utilty:mean_hte_utility)
d <- b %>% summarise(sd_actual_utility = sd(m_actual_utilty),
sd_ate_utility = sd(m_ate_utility),
sd_hte_utility = sd(m_hte_utility)) %>% gather(utility_type, sd_utility, sd_actual_utility:sd_hte_utility)
c
d
c["sd_utility"] = d$sd_utility
c
a <- train_utility %>% select(iteration, actual_group, actual_value) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utilty = mean(actual_value)) %>% group_by(iteration) %>% summarise(max_actual_utilty = max(m_actual_utilty))
b <- main_utility %>% select(iteration, actual_value, first) %>% group_by(iteration) %>%
summarise(m_actual_utilty = mean(actual_value), m_hte_utility = mean(first))
b['m_ate_utility'] = a["max_actual_utilty"]
c <- b %>% summarise(mean_actual_utilty = mean(m_actual_utilty),
mean_ate_utility = mean(m_ate_utility),
mean_hte_utility = mean(m_hte_utility)) %>% gather(utility_type, mean_utility, mean_actual_utilty:mean_hte_utility)
d <- b %>% summarise(sd_actual_utility = sd(m_actual_utilty),
sd_ate_utility = sd(m_ate_utility),
sd_hte_utility = sd(m_hte_utility)) %>% gather(utility_type, sd_utility, sd_actual_utility:sd_hte_utility)
c["sd_utility"] = d$sd_utility
ggplot(b,aes(utility_type,mean_utility))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=mean_utility-sd_utility, ymax=mean_utility+sd_utility),width=.2,position=position_dodge(.9)) +
labs(x = "Utility_type", y = "Mean Utility in RMB", title ="Graph of Utility_type Vs. Mean realised utility")+   ggsave("Graph of Utility_type Vs. Mean realised utility.png", width = 8, height = 5)
c <- b %>% summarise(mean_actual_utilty = mean(m_actual_utilty),
mean_ate_utility = mean(m_ate_utility),
mean_hte_utility = mean(m_hte_utility)) %>% gather(utility_type, mean_utility, mean_actual_utilty:mean_hte_utility)
d <- b %>% summarise(sd_actual_utility = sd(m_actual_utilty),
sd_ate_utility = sd(m_ate_utility),
sd_hte_utility = sd(m_hte_utility)) %>% gather(utility_type, sd_utility, sd_actual_utility:sd_hte_utility)
c["sd_utility"] = d$sd_utility
c
ggplot(c,aes(utility_type,mean_utility))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=mean_utility-sd_utility, ymax=mean_utility+sd_utility),width=.2,position=position_dodge(.9)) +
labs(x = "Utility_type", y = "Mean Utility in RMB", title ="Graph of Utility_type Vs. Mean realised utility")+   ggsave("Graph of Utility_type Vs. Mean realised utility.png", width = 8, height = 5)
?qnorm
qnorm(0.05)
qnorm(0.95)
suppressPackageStartupMessages({
library(dplyr)
library(tidyr)
library(knitr)
library(ggplot2)}
)
setwd("C:\\Users\\Sandeep kumar\\Google Drive\\Ed Research\\optimal-hte\\Code\\applications\\donor\\output")
main_utility <- read.csv("don_utility.csv")
main_benefit <- read.csv("don_benefit.csv")
main_cost <- read.csv("don_cost.csv")
train_utility <- read.csv("don_train_utility.csv")
optimization_results <- read.csv("don_optimization_results.csv")
# Average actual Vs. optimal utility per group
a <- main_utility %>% select(iteration, actual_group, actual_value, first) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utility = mean(actual_value), m_optimal_utility = mean(first)) %>%
ungroup() %>% group_by(actual_group) %>%
summarise(mean_actual_utility = mean(m_actual_utility), mean_optimal_utility = mean(m_optimal_utility),
sd_actual_utility = sd(m_actual_utility), sd_optimal_utility = sd(m_optimal_utility))
kable(a)
a <- main_utility %>% select(iteration, actual_group, actual_value, first) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utility = mean(actual_value), m_optimal_utility = mean(first)) %>%
ungroup() %>% group_by(actual_group) %>%
summarise(mean_actual_utility = mean(m_actual_utility), mean_optimal_utility = mean(m_optimal_utility)) %>%
gather(utility_type, utility, mean_actual_utility: mean_optimal_utility)
b <- main_utility %>% select(iteration, actual_group, actual_value, first) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utility = mean(actual_value), m_optimal_utility = mean(first)) %>%
ungroup() %>% group_by(actual_group) %>%
summarise(se_actual_utility = sd(m_actual_utility)/sqrt(n), se_optimal_utility = se(m_optimal_utility)/sqrt(n)) %>%
gather(utility_type, utility, se_actual_utility: se_optimal_utility)
# Average actual Vs. optimal utility per group
a <- main_utility %>% select(iteration, actual_group, actual_value, first) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utility = mean(actual_value), m_optimal_utility = mean(first)) %>%
ungroup() %>% group_by(actual_group) %>%
summarise(mean_actual_utility = mean(m_actual_utility), mean_optimal_utility = mean(m_optimal_utility),
sd_actual_utility = sd(m_actual_utility), sd_optimal_utility = sd(m_optimal_utility))
kable(a)
a <- main_utility %>% select(iteration, actual_group, actual_value, first) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utility = mean(actual_value), m_optimal_utility = mean(first)) %>%
ungroup() %>% group_by(actual_group) %>%
summarise(mean_actual_utility = mean(m_actual_utility), mean_optimal_utility = mean(m_optimal_utility)) %>%
gather(utility_type, utility, mean_actual_utility: mean_optimal_utility)
b <- main_utility %>% select(iteration, actual_group, actual_value, first) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utility = mean(actual_value), m_optimal_utility = mean(first)) %>%
ungroup() %>% group_by(actual_group) %>%
summarise(se_actual_utility = sd(m_actual_utility)/sqrt(n), se_optimal_utility = sd(m_optimal_utility)/sqrt(n)) %>%
gather(utility_type, utility, se_actual_utility: se_optimal_utility)
# Average actual Vs. optimal utility per group
a <- main_utility %>% select(iteration, actual_group, actual_value, first) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utility = mean(actual_value), m_optimal_utility = mean(first)) %>%
ungroup() %>% group_by(actual_group) %>%
summarise(mean_actual_utility = mean(m_actual_utility), mean_optimal_utility = mean(m_optimal_utility),
sd_actual_utility = sd(m_actual_utility), sd_optimal_utility = sd(m_optimal_utility))
kable(a)
a <- main_utility %>% select(iteration, actual_group, actual_value, first) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utility = mean(actual_value), m_optimal_utility = mean(first)) %>%
ungroup() %>% group_by(actual_group) %>%
summarise(mean_actual_utility = mean(m_actual_utility), mean_optimal_utility = mean(m_optimal_utility)) %>%
gather(utility_type, utility, mean_actual_utility: mean_optimal_utility)
b <- main_utility %>% select(iteration, actual_group, actual_value, first) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utility = mean(actual_value), m_optimal_utility = mean(first)) %>%
ungroup() %>% group_by(actual_group) %>%
summarise(se_actual_utility = sd(m_actual_utility)/sqrt(n()), se_optimal_utility = sd(m_optimal_utility)/sqrt(n())) %>%
gather(utility_type, utility, se_actual_utility: se_optimal_utility)
a["se"] = b$utility
ggplot(a,aes(actual_group,utility,fill=utility_type))+
geom_bar(stat="identity",position="dodge")+
geom_errorbar(aes(ymin=utility+se*qnorm(0.025), ymax=utility+se*qnorm(0.975)),width=.2,position=position_dodge(.9)) +
labs(x = "Treatment_group", y = "Utility in RMB", title ="Graph of Average Actual Utility and Average Predicted Optimal Utility (CI)") +   ggsave("Graph of Average Actual Utility and Average Predicted Optimal Utility(CI).png", width = 8, height = 5)
a <- train_utility %>% select(iteration, actual_group, actual_value) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utilty = mean(actual_value)) %>% group_by(iteration) %>% summarise(max_actual_utilty = max(m_actual_utilty))
b <- main_utility %>% select(iteration, actual_value, first) %>% group_by(iteration) %>%
summarise(m_actual_utilty = mean(actual_value), m_hte_utility = mean(first))
b['m_ate_utility'] = a["max_actual_utilty"]
c <- b %>% summarise(mean_actual_utilty = mean(m_actual_utilty),
mean_ate_utility = mean(m_ate_utility),
mean_hte_utility = mean(m_hte_utility)) %>% gather(utility_type, mean_utility, mean_actual_utilty:mean_hte_utility)
d <- b %>% summarise(se_actual_utility = sd(m_actual_utilty)/sqrt(n()),
se_ate_utility = sd(m_ate_utility)/sqrt(n()),
se_hte_utility = sd(m_hte_utility)/sqrt(n())) %>% gather(utility_type, se_utility, se_actual_utility:se_hte_utility)
c["sd_utility"] = d$se_utility
ggplot(c,aes(utility_type,mean_utility))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=mean_utility+se*qnorm(0.025), ymax=mean_utility+se*qnorm(0.975)),width=.2,position=position_dodge(.9)) +
labs(x = "Utility_type", y = "Mean Utility in RMB", title ="Graph of Utility_type Vs. Mean realised utility")+   ggsave("Graph of Utility_type Vs. Mean realised utility(CI).png", width = 8, height = 5)
a <- train_utility %>% select(iteration, actual_group, actual_value) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utilty = mean(actual_value)) %>% group_by(iteration) %>% summarise(max_actual_utilty = max(m_actual_utilty))
b <- main_utility %>% select(iteration, actual_value, first) %>% group_by(iteration) %>%
summarise(m_actual_utilty = mean(actual_value), m_hte_utility = mean(first))
b['m_ate_utility'] = a["max_actual_utilty"]
c <- b %>% summarise(mean_actual_utilty = mean(m_actual_utilty),
mean_ate_utility = mean(m_ate_utility),
mean_hte_utility = mean(m_hte_utility)) %>% gather(utility_type, mean_utility, mean_actual_utilty:mean_hte_utility)
d <- b %>% summarise(se_actual_utility = sd(m_actual_utilty)/sqrt(n()),
se_ate_utility = sd(m_ate_utility)/sqrt(n()),
se_hte_utility = sd(m_hte_utility)/sqrt(n())) %>% gather(utility_type, se_utility, se_actual_utility:se_hte_utility)
c["sd_utility"] = d$se_utility
ggplot(c,aes(utility_type,mean_utility))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=mean_utility+se_utility*qnorm(0.025), ymax=mean_utility+se_utility*qnorm(0.975)),width=.2,position=position_dodge(.9)) +
labs(x = "Utility_type", y = "Mean Utility in RMB", title ="Graph of Utility_type Vs. Mean realised utility")+   ggsave("Graph of Utility_type Vs. Mean realised utility(CI).png", width = 8, height = 5)
a <- train_utility %>% select(iteration, actual_group, actual_value) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utilty = mean(actual_value)) %>% group_by(iteration) %>% summarise(max_actual_utilty = max(m_actual_utilty))
b <- main_utility %>% select(iteration, actual_value, first) %>% group_by(iteration) %>%
summarise(m_actual_utilty = mean(actual_value), m_hte_utility = mean(first))
b['m_ate_utility'] = a["max_actual_utilty"]
c <- b %>% summarise(mean_actual_utilty = mean(m_actual_utilty),
mean_ate_utility = mean(m_ate_utility),
mean_hte_utility = mean(m_hte_utility)) %>% gather(utility_type, mean_utility, mean_actual_utilty:mean_hte_utility)
d <- b %>% summarise(se_actual_utility = sd(m_actual_utilty)/sqrt(n()),
se_ate_utility = sd(m_ate_utility)/sqrt(n()),
se_hte_utility = sd(m_hte_utility)/sqrt(n())) %>% gather(utility_type, se_utility, se_actual_utility:se_hte_utility)
c["se_utility"] = d$se_utility
ggplot(c,aes(utility_type,mean_utility))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=mean_utility+se_utility*qnorm(0.025), ymax=mean_utility+se_utility*qnorm(0.975)),width=.2,position=position_dodge(.9)) +
labs(x = "Utility_type", y = "Mean Utility in RMB", title ="Graph of Utility_type Vs. Mean realised utility")+   ggsave("Graph of Utility_type Vs. Mean realised utility(CI).png", width = 8, height = 5)
data <- optimization_results
#data <- rbind(data1, data2)
data <- data %>% group_by(budget) %>% summarise_each(funs(mean,sd,se=sd(.)/sqrt(n()))) %>% ungroup()
data <- data %>% mutate(ate_milp = ate_mean-milp_mean, greedy_milp = greedy_mean-milp_mean,
ate_greedy = ate_mean-greedy_mean, milp_greedy = milp_mean-greedy_mean,
greedy_ate = greedy_mean-ate_mean, milp_ate = milp_mean-ate_mean)
data <- data %>% mutate(ate_milp_p = ((ate_mean-milp_mean)/milp_mean)*100, greedy_milp_p = ((greedy_mean-milp_mean)/milp_mean)*100,
ate_greedy_p = ((ate_mean-greedy_mean)/(greedy_mean+1))*100, milp_greedy_p = ((milp_mean-greedy_mean)/(greedy_mean+1))*100,
greedy_ate_p = ((greedy_mean-ate_mean)/ate_mean)*100, milp_ate_p = ((milp_mean-ate_mean)/ate_mean)*100)
#
# ggplot() +
#   geom_line(data=data, aes(budget, ate_milp, colour="ATE")) +
#   geom_line(data=data, aes(budget, greedy_milp, colour="GREEDY")) +
#   labs(x = "Budget in RMB", y = "Utility in RMB", title ="Graph of Budget Vs. Increased Utility (MILP Baseline)", color='Allocation Methods') +
#   ggsave("plot_utility_milp.png", width = 8, height = 5)
#
# ggplot() +
#   geom_line(data=data, aes(budget, ate_greedy, colour="ATE")) +
#   geom_line(data=data, aes(budget, milp_greedy, colour="MILP")) +
#   labs(x = "Budget in RMB", y = "Utility in RMB", title ="Graph of Budget Vs. Increased Utility (GREEDY Baseline)", color='Allocation Methods') +
#   ggsave("plot_utility_greedy.png", width = 8, height = 5)
#
# ggplot() +
#   geom_line(data=data, aes(budget, greedy_ate, colour="GREEDY")) +
#   geom_line(data=data, aes(budget, milp_ate, colour="MILP")) +
#   labs(x = "Budget in RMB", y = "Utility in RMB", title ="Graph of Budget Vs. Increased Utility (ATE Baseline)", color='Allocation Methods') +
#   ggsave("plot_utility_ate.png", width = 8, height = 5)
#
# ggplot() +
#   geom_line(data=data, aes(budget, ate_milp_p, colour="ATE")) +
#   geom_line(data=data, aes(budget, greedy_milp_p, colour="GREEDY")) +
#   labs(x = "Budget in RMB", y = "Utility in RMB", title ="Graph of Budget Vs. Perc. Inc in Utility (MILP Baseline)", color='Allocation Methods') +
#   ggsave("plot_utility_milp_p.png", width = 8, height = 5)
#
# ggplot() +
#   geom_line(data=data, aes(budget, ate_greedy_p, colour="ATE")) +
#   geom_line(data=data, aes(budget, milp_greedy_p, colour="MILP")) +
#   labs(x = "Budget in RMB", y = "Utility in RMB", title ="Graph of Budget Vs. Perc. Inc in Utility (GREEDY Baseline)", color='Allocation Methods') +
#   ggsave("plot_utility_greedy_p.png", width = 8, height = 5)
#
# ggplot() +
#   geom_line(data=data, aes(budget, greedy_ate_p, colour="GREEDY")) +
#   geom_line(data=data, aes(budget, milp_ate_p, colour="MILP")) +
#   labs(x = "Budget in RMB", y = "Utility in RMB", title ="Graph of Budget Vs. Perc. Inc in Utility (ATE Baseline)", color='Allocation Methods') +
#   ggsave("plot_utility_ate_p.png", width = 8, height = 5)
ggplot() +
geom_line(data=data, aes(budget, greedy_mean, colour="Greedy")) +
geom_ribbon(data=data, aes(x=budget, y=greedy_mean,ymin=greedy_mean+greedy_se*qnorm(0.025), ymax=greedy_mean+greedy_se*qnorm(0.975)), alpha=0.2, fill = "grey70") +
geom_line(data=data, aes(budget, milp_mean, colour="MILP")) +
geom_ribbon(data=data, aes(x=budget, y=milp_mean,ymin=milp_mean+milp_se*qnorm(0.025), ymax=milp_mean+milp_se*qnorm(0.975)), alpha=0.2, fill = "grey70") +
geom_line(data=data, aes(budget, ate_mean, colour="ATE")) +
geom_ribbon(data=data, aes(x=budget, y=ate_mean,ymin=ate_mean+ate_se*qnorm(0.025), ymax=ate_mean+ate_se*qnorm(0.975)), alpha=0.2, fill = "grey70") +
labs(x = "Budget in RMB", y = "Utility in RMB", title ="Graph of Budget Vs. Utility(CI)", color='Allocation Methods') +
ggsave("plot_utility(CI).png", width = 8, height = 5)
ggplot() +
geom_line(data=data, aes(budget, n_greedy_mean, colour="Greedy")) +
geom_ribbon(data=data, aes(x=budget, y=n_greedy_mean,ymin=n_greedy_mean+n_greedy_se*qnorm(0.025), ymax=n_greedy_mean+n_greedy_se*qnorm(0.975)), alpha=0.2, fill = "grey70") +
geom_line(data=data, aes(budget, n_milp_mean, colour="MILP")) +
geom_ribbon(data=data, aes(x=budget, y=n_milp_mean,ymin=n_milp_mean+n_milp_se*qnorm(0.025), ymax=n_milp_mean+n_milp_se*qnorm(0.975)), alpha=0.2, fill = "grey70") +
geom_line(data=data, aes(budget, n_ate_mean, colour="ATE")) +
geom_ribbon(data=data, aes(x=budget, y=n_ate_mean,ymin=n_ate_mean+n_ate_se*qnorm(0.025), ymax=n_ate_mean+n_ate_se*qnorm(0.975)), alpha=0.2, fill = "grey70") +
labs(x = "Budget in RMB", y = "No. of Users served", title ="Graph of Budget Vs. No. of Users served(CI)", color='Allocation Methods') +
ggsave("plot_users(CI).png", width = 8, height = 5)
#
# ggplot() +
#   geom_line(data=data, aes(budget, n_greedy_mean, colour="Greedy")) +
#   geom_ribbon(data=data, aes(x=budget, y=n_greedy_mean,ymin=n_greedy_mean+n_greedy_sd, ymax=n_greedy_mean-n_greedy_sd), alpha=0.2, fill = "grey70") +
#   geom_line(data=data, aes(budget, n_ate_mean, colour="ATE")) +
#   geom_ribbon(data=data, aes(x=budget, y=n_ate_mean,ymin=n_ate_mean+n_ate_sd, ymax=n_ate_mean-n_ate_sd), alpha=0.2, fill = "grey70") +
#   labs(x = "Budget in RMB", y = "No. of Users served", title ="Graph of Budget Vs. No. of Users served", color='Allocation Methods') +
#   ggsave("plot_users_2.png", width = 8, height = 5)
#
data <- optimization_results
#data <- rbind(data1, data2)
data <- data %>% group_by(budget) %>% summarise_each(funs(mean,sd)) %>% ungroup()
data <- data %>% filter(budget%%2000==0) %>% select(-c(X_mean,X_sd))
kable(data)
suppressPackageStartupMessages({
library(TSA)
library(forecast)
library(ggplot2)
library(dplyr)
})
library(dplyr)
library(ggplot2)
library(tidyr)
setwd("G:\\My Drive\\Research\\Contextual Bandits\\code\\bandits\\peeking")
df <- read.csv("analysis_overall.csv") %>%  select(-starts_with("peek"))
df_m <- df %>% select(time, ab_m, ucb_m, mix_m) %>% gather("type", "mean", 2:4)
df_v <- df %>% select(time, ab_v, ucb_v, mix_v) %>% gather("type", "variance", 2:4)
df_r <- df %>% select(time, ab_r, ucb_r, mix_r) %>% gather("type", "rse", 2:4)
df_s <- df %>% select(time, ab_s, ucb_s, mix_s) %>% gather("type", "sum", 2:4)
ggplot(df_m, aes(time, mean)) + geom_line(aes(colour=type))
ggplot(df_v, aes(time, variance)) + geom_line(aes(colour=type))
ggplot(df_s, aes(time, sum)) + geom_line(aes(colour=type))
df_s <- df %>% select(time, ab_s, ucb_s, mix_s) %>% rename(ab_s = `A/B Testing`) %>%  gather("type", "sum", 2:4)
df_s <- df %>% select(time, ab_s, ucb_s, mix_s) %>% rename(`A/B Testing`=ab_s) %>%  gather("type", "sum", 2:4)
df_s <- df %>% select(time, ab_s, ucb_s, mix_s) %>% rename(`A/B Testing`=ab_s, `UCB`=ucb_s) %>%  gather("type", "sum", 2:4)
df_s <- df %>% select(time, ab_s, ucb_s, mix_s) %>% rename(`A/B Testing`=ab_s, `UCB`=ucb_s, `Hybrid_alg`=mix_s) %>%  gather("type", "sum", 2:4)
ggplot(df_m, aes(time, mean)) + geom_line(aes(colour=type))
ggplot(df_s, aes(time, sum)) + geom_line(aes(colour=type))
ggplot(df_s, aes(time, Algorithm)) + geom_line(aes(colour=type))
df_s <- df %>% select(time, ab_s, ucb_s, mix_s) %>%
rename(`A/B Testing`=ab_s, `UCB`=ucb_s, `Hybrid_alg`=mix_s) %>%
gather("Algorithm", "sum", 2:4)
ggplot(df_s, aes(time, Algorithm)) + geom_line(aes(colour=type))
df_s <- df %>% select(time, ab_s, ucb_s, mix_s) %>%
rename(`A/B Testing`=ab_s, `UCB`=ucb_s, `Hybrid_alg`=mix_s) %>%
gather("Algorithm", "sum", 2:4)
ggplot(df_s, aes(time, Algorithm)) + geom_line(aes(colour=type))
ggplot(df_s, aes(time, sum)) + geom_line(aes(colour=Algorithm))
df_s <- df %>% select(time, ab_s, ucb_s, mix_s) %>%
rename(`A/B Testing`=ab_s, `UCB`=ucb_s, `Hybrid_alg`=mix_s) %>%
gather("Algorithm", "Total Outcome", 2:4)
ggplot(df_s, aes(time, `Total Outcome`)) + geom_line(aes(colour=Algorithm))
ggplot(df_s, aes(time, `Total Outcome`)) + geom_line(aes(colour=Algorithm)) + theme_bw()
ggplot(df_s, aes(time, `Total Outcome`)) + geom_line(aes(colour=Algorithm)) + theme_bw() + ggsave('out.png')
ggplot(df_s, aes(time, `Total Outcome`)) + geom_line(aes(colour=Algorithm)) +
theme_bw() + ggsave('out.png', width = 8, height = 5)
df_s <- df %>% filter(time<2000) %>%  select(time, ab_s, ucb_s, mix_s) %>%
rename(`A/B Testing`=ab_s, `UCB`=ucb_s, `Hybrid_alg`=mix_s) %>%
gather("Algorithm", "Total Outcome", 2:4)
ggplot(df_m, aes(time, mean)) + geom_line(aes(colour=type))
ggplot(df_v, aes(time, variance)) + geom_line(aes(colour=type))
ggplot(df_s, aes(time, `Total Outcome`)) + geom_line(aes(colour=Algorithm)) +
theme_bw() + ggsave('out.png', width = 8, height = 5)
library(dplyr)
library(ggplot2)
library(tidyr)
setwd("G:\\My Drive\\Research\\Contextual Bandits\\code\\bandits\\peeking")
df <- read.csv("analysis_overall.csv") %>%  select(-starts_with("peek"))
df_m <- df %>% select(time, ab_m, ucb_m, mix_m) %>% gather("type", "mean", 2:4)
df_v <- df %>% select(time, ab_v, ucb_v, mix_v) %>% gather("type", "variance", 2:4)
df_r <- df %>% select(time, ab_r, ucb_r, mix_r) %>% gather("type", "rse", 2:4)
df_s <- df %>% filter(time<2000) %>%  select(time, ab_s, ucb_s, mix_s) %>%
rename(`A/B Testing`=ab_s, `UCB`=ucb_s, `Hybrid_alg`=mix_s) %>%
gather("Algorithm", "Total Outcome", 2:4)
ggplot(df_m, aes(time, mean)) + geom_line(aes(colour=type))
ggplot(df_v, aes(time, variance)) + geom_line(aes(colour=type))
ggplot(df_s, aes(time, `Total Outcome`)) + geom_line(aes(colour=Algorithm)) +
theme_bw() + ggsave('out.png', width = 8, height = 5)
df2 <- read.csv("analysis_rontrol.csv") %>% filter(time<500)
df2_m <- df2 %>% select(time, ab_m, ucb_m, mix_m) %>% gather("type", "mean", 2:4)
df2_v <- df2 %>% select(time, ab_v, ucb_v, mix_v) %>%
rename(`A/B Testing`=ab_v, `UCB`=ucb_v, `Hybrid_alg`=mix_v) %>%
gather("Algorithm", "Variance", 2:4)
df2_r <- df2 %>% select(time, ab_r, ucb_r, mix_r) %>%
rename(`A/B Testing`=ab_r, `UCB`=ucb_r, `Hybrid_alg`=mix_r) %>%
gather("Algorithm", "Squared Error of Variance", 2:4)
df2_s <- df2 %>% select(time, ab_s, ucb_s, mix_s) %>% gather("type", "sum", 2:4)
ggplot(df2_m, aes(time, mean)) + geom_line(aes(colour=type))
ggplot(df2_v, aes(time, variance)) + geom_line(aes(colour=type))
df3 <- read.csv("analysis_trt.csv")  %>% filter(time<500)
df3_m <- df3 %>% select(time, ab_m, ucb_m, mix_m) %>% gather("type", "mean", 2:4)
df3_v <- df2 %>% select(time, ab_v, ucb_v, mix_v) %>%
rename(`A/B Testing`=ab_v, `UCB`=ucb_v, `Hybrid_alg`=mix_v) %>%
gather("Algorithm", "Variance", 2:4)
df3_r <- df2 %>% select(time, ab_r, ucb_r, mix_r) %>%
rename(`A/B Testing`=ab_r, `UCB`=ucb_r, `Hybrid_alg`=mix_r) %>%
gather("Algorithm", "Squared Error of Variance", 2:4)
ggplot(df3_m, aes(time, mean)) + geom_line(aes(colour=type))
ggplot(df3_v, aes(time, variance)) + geom_line(aes(colour=type))
ggplot() + geom_line(data = df2_v, aes(time, Variance, colour=Algorithm)) + geom_line(data = df3_v, aes(time, Variance, colour=Algorithm))
ggplot() + geom_line(data = df2_r, aes(time, `Squared Error of Variance`, colour=Algorithm)) + geom_line(data = df3_r, aes(time, `Squared Error of Variance`, colour=Algorithm))
ggplot() + geom_line(data = df2_r, aes(time, `Squared Error of Variance`, colour=Algorithm)) + geom_line(data = df3_r, aes(time, `Squared Error of Variance`, colour=Algorithm))
ggplot() + geom_line(data = df2_r, aes(time, `Squared Error of Variance`, colour=Algorithm)) + geom_line(data = df3_r, aes(time, `Squared Error of Variance`, colour=Algorithm))
df2 <- read.csv("analysis_rontrol.csv") %>% filter(time<500)
df2_m <- df2 %>% select(time, ab_m, ucb_m, mix_m) %>% gather("type", "mean", 2:4)
df2_v <- df2 %>% select(time, ab_v, ucb_v, mix_v) %>%
rename(`A/B Testing`=ab_v, `UCB`=ucb_v, `Hybrid_alg`=mix_v) %>%
gather("Algorithm", "Variance", 2:4)
df2_r <- df2 %>% select(time, ab_r, ucb_r, mix_r) %>%
rename(`A/B Testing`=ab_r, `UCB`=ucb_r, `Hybrid_alg`=mix_r) %>%
gather("Algorithm", "Squared Error of Variance", 2:4)
df2_s <- df2 %>% select(time, ab_s, ucb_s, mix_s) %>% gather("type", "sum", 2:4)
ggplot(df2_m, aes(time, mean)) + geom_line(aes(colour=type))
ggplot(df2_v, aes(time, variance)) + geom_line(aes(colour=type))
df3 <- read.csv("analysis_trt.csv")  %>% filter(time<500)
df3_m <- df3 %>% select(time, ab_m, ucb_m, mix_m) %>% gather("type", "mean", 2:4)
df3_v <- df2 %>% select(time, ab_v, ucb_v, mix_v) %>%
rename(`A/B Testing`=ab_v, `UCB`=ucb_v, `Hybrid_alg`=mix_v) %>%
gather("Algorithm", "Variance", 2:4)
df3_r <- df2 %>% select(time, ab_r, ucb_r, mix_r) %>%
rename(`A/B Testing`=ab_r, `UCB`=ucb_r, `Hybrid_alg`=mix_r) %>%
gather("Algorithm", "Squared Error of Variance", 2:4)
ggplot(df3_m, aes(time, mean)) + geom_line(aes(colour=type))
ggplot(df3_v, aes(time, variance)) + geom_line(aes(colour=type))
ggplot() + geom_line(data = df2_v, aes(time, Variance, colour=Algorithm)) + geom_line(data = df3_v, aes(time, Variance, colour=Algorithm))
ggplot() + geom_line(data = df2_v, aes(time, Variance, colour=Algorithm))
ggplot() +  geom_line(data = df3_v, aes(time, Variance, colour=Algorithm))
ggplot() + geom_line(data = df2_v, aes(time, Variance, colour=Algorithm))
ggplot() +  geom_line(data = df3_v, aes(time, Variance, colour=Algorithm))
ggplot() + geom_line(data = df2_v, aes(time, Variance, colour=Algorithm)) +  geom_line(data = df3_v, aes(time, Variance, colour=Algorithm))
library(dplyr)
library(ggplot2)
library(tidyr)
setwd("G:\\My Drive\\Research\\Contextual Bandits\\code\\bandits\\peeking")
df <- read.csv("analysis_overall.csv") %>%  select(-starts_with("peek"))
df_m <- df %>% select(time, ab_m, ucb_m, mix_m) %>% gather("type", "mean", 2:4)
df_v <- df %>% select(time, ab_v, ucb_v, mix_v) %>% gather("type", "variance", 2:4)
df_r <- df %>% select(time, ab_r, ucb_r, mix_r) %>% gather("type", "rse", 2:4)
df_s <- df %>% filter(time<2000) %>%  select(time, ab_s, ucb_s, mix_s) %>%
rename(`A/B Testing`=ab_s, `UCB`=ucb_s, `Hybrid_alg`=mix_s) %>%
gather("Algorithm", "Total Outcome", 2:4)
ggplot(df_m, aes(time, mean)) + geom_line(aes(colour=type))
ggplot(df_v, aes(time, variance)) + geom_line(aes(colour=type))
ggplot(df_s, aes(time, `Total Outcome`)) + geom_line(aes(colour=Algorithm)) +
theme_bw() + ggsave('out.png', width = 8, height = 5)
df2 <- read.csv("analysis_rontrol.csv") %>% filter(time<500)
df2_m <- df2 %>% select(time, ab_m, ucb_m, mix_m) %>% gather("type", "mean", 2:4)
df2_v <- df2 %>% select(time, ab_v, ucb_v, mix_v) %>%
rename(`A/B Testing`=ab_v, `UCB`=ucb_v, `Hybrid_alg`=mix_v) %>%
gather("Algorithm", "Variance", 2:4)
df2_r <- df2 %>% select(time, ab_r, ucb_r, mix_r) %>%
rename(`A/B Testing`=ab_r, `UCB`=ucb_r, `Hybrid_alg`=mix_r) %>%
gather("Algorithm", "Squared Error of Variance", 2:4)
df2_s <- df2 %>% select(time, ab_s, ucb_s, mix_s) %>% gather("type", "sum", 2:4)
ggplot(df2_m, aes(time, mean)) + geom_line(aes(colour=type))
ggplot(df2_v, aes(time, variance)) + geom_line(aes(colour=type))
df3 <- read.csv("analysis_trt.csv")  %>% filter(time<500)
df3_m <- df3 %>% select(time, ab_m, ucb_m, mix_m) %>% gather("type", "mean", 2:4)
df3_v <- df3 %>% select(time, ab_v, ucb_v, mix_v) %>%
rename(`A/B Testing`=ab_v, `UCB`=ucb_v, `Hybrid_alg`=mix_v) %>%
gather("Algorithm", "Variance", 2:4)
df3_r <- df3 %>% select(time, ab_r, ucb_r, mix_r) %>%
rename(`A/B Testing`=ab_r, `UCB`=ucb_r, `Hybrid_alg`=mix_r) %>%
gather("Algorithm", "Squared Error of Variance", 2:4)
ggplot(df3_m, aes(time, mean)) + geom_line(aes(colour=type))
ggplot(df3_v, aes(time, variance)) + geom_line(aes(colour=type))
ggplot() + geom_line(data = df2_v, aes(time, Variance, colour=Algorithm)) +  geom_line(data = df3_v, aes(time, Variance, colour=Algorithm))
ggplot() + geom_line(data = df2_r, aes(time, `Squared Error of Variance`, colour=Algorithm)) + geom_line(data = df3_r, aes(time, `Squared Error of Variance`, colour=Algorithm))
library(dplyr)
library(ggplot2)
library(tidyr)
setwd("G:\\My Drive\\Research\\Contextual Bandits\\code\\bandits\\peeking")
df <- read.csv("analysis_overall.csv") %>%  select(-starts_with("peek"))
df_m <- df %>% select(time, ab_m, ucb_m, mix_m) %>% gather("type", "mean", 2:4)
df_v <- df %>% select(time, ab_v, ucb_v, mix_v) %>% gather("type", "variance", 2:4)
df_r <- df %>% select(time, ab_r, ucb_r, mix_r) %>% gather("type", "rse", 2:4)
df_s <- df %>% filter(time<2000) %>%  select(time, ab_s, ucb_s, mix_s) %>%
rename(`A/B Testing`=ab_s, `UCB`=ucb_s, `Hybrid_alg`=mix_s) %>%
gather("Algorithm", "Total Outcome", 2:4)
ggplot(df_m, aes(time, mean)) + geom_line(aes(colour=type))
ggplot(df_v, aes(time, variance)) + geom_line(aes(colour=type))
ggplot(df_s, aes(time, `Total Outcome`)) + geom_line(aes(colour=Algorithm)) +
theme_bw() + ggsave('out.png', width = 8, height = 5)
df2 <- read.csv("analysis_rontrol.csv") %>% filter(time<500)
df2_m <- df2 %>% select(time, ab_m, ucb_m, mix_m) %>% gather("type", "mean", 2:4)
df2_v <- df2 %>% select(time, ab_v, ucb_v, mix_v) %>%
rename(`A/B Testing`=ab_v, `UCB`=ucb_v, `Hybrid_alg`=mix_v) %>%
gather("Algorithm", "Variance", 2:4)
df2_r <- df2 %>% select(time, ab_r, ucb_r, mix_r) %>%
rename(`A/B Testing`=ab_r, `UCB`=ucb_r, `Hybrid_alg`=mix_r) %>%
gather("Algorithm", "Squared Error of Variance", 2:4)
df2_s <- df2 %>% select(time, ab_s, ucb_s, mix_s) %>% gather("type", "sum", 2:4)
ggplot(df2_m, aes(time, mean)) + geom_line(aes(colour=type))
ggplot(df2_v, aes(time, variance)) + geom_line(aes(colour=type))
df3 <- read.csv("analysis_trt.csv")  %>% filter(time<500)
df3_m <- df3 %>% select(time, ab_m, ucb_m, mix_m) %>% gather("type", "mean", 2:4)
df3_v <- df3 %>% select(time, ab_v, ucb_v, mix_v) %>%
rename(`A/B Testing`=ab_v, `UCB`=ucb_v, `Hybrid_alg`=mix_v) %>%
gather("Algorithm", "Variance", 2:4)
df3_r <- df3 %>% select(time, ab_r, ucb_r, mix_r) %>%
rename(`A/B Testing`=ab_r, `UCB`=ucb_r, `Hybrid_alg`=mix_r) %>%
gather("Algorithm", "Squared Error of Variance", 2:4)
ggplot(df3_m, aes(time, mean)) + geom_line(aes(colour=type))
ggplot(df3_v, aes(time, variance)) + geom_line(aes(colour=type))
ggplot() + geom_line(data = df2_v, aes(time, Variance, colour=Algorithm)) +
geom_line(data = df3_v, aes(time, Variance, colour=Algorithm)) +
theme_bw() + ggsave('out_var.png', width = 8, height = 5)
ggplot() + geom_line(data = df2_r, aes(time, `Squared Error of Variance`, colour=Algorithm)) +
geom_line(data = df3_r, aes(time, `Squared Error of Variance`, colour=Algorithm)) +
theme_bw() + ggsave('out_err.png', width = 8, height = 5)
library(dplyr)
library(ggplot2)
library(tidyr)
setwd("G:\\My Drive\\Research\\Contextual Bandits\\code\\bandits\\peeking")
df <- read.csv("analysis_overall.csv") %>%  select(-starts_with("peek"))
df_m <- df %>% select(time, ab_m, ucb_m, mix_m) %>% gather("type", "mean", 2:4)
df_v <- df %>% select(time, ab_v, ucb_v, mix_v) %>% gather("type", "variance", 2:4)
df_r <- df %>% select(time, ab_r, ucb_r, mix_r) %>% gather("type", "rse", 2:4)
df_s <- df %>% filter(time<2000) %>%  select(time, ab_s, ucb_s, mix_s) %>%
rename(`A/B Testing`=ab_s, `UCB`=ucb_s, `Hybrid_alg`=mix_s) %>%
gather("Algorithm", "Total Outcome", 2:4)
ggplot(df_m, aes(time, mean)) + geom_line(aes(colour=type))
ggplot(df_v, aes(time, variance)) + geom_line(aes(colour=type))
ggplot(df_s, aes(time, `Total Outcome`)) + geom_line(aes(colour=Algorithm)) +
theme_bw() + ggsave('out.png', width = 8, height = 5)
df2 <- read.csv("analysis_rontrol.csv")
df2_m <- df2 %>% select(time, ab_m, ucb_m, mix_m) %>% gather("type", "mean", 2:4)
df2_v <- df2 %>% select(time, ab_v, ucb_v, mix_v) %>%
rename(`A/B Testing`=ab_v, `UCB`=ucb_v, `Hybrid_alg`=mix_v) %>%
gather("Algorithm", "Variance", 2:4)
df2_r <- df2 %>% select(time, ab_r, ucb_r, mix_r) %>%
rename(`A/B Testing`=ab_r, `UCB`=ucb_r, `Hybrid_alg`=mix_r) %>%
gather("Algorithm", "Squared Error of Variance", 2:4)
df2_s <- df2 %>% select(time, ab_s, ucb_s, mix_s) %>% gather("type", "sum", 2:4)
ggplot(df2_m, aes(time, mean)) + geom_line(aes(colour=type))
ggplot(df2_v, aes(time, variance)) + geom_line(aes(colour=type))
df3 <- read.csv("analysis_trt.csv")
df3_m <- df3 %>% select(time, ab_m, ucb_m, mix_m) %>% gather("type", "mean", 2:4)
df3_v <- df3 %>% select(time, ab_v, ucb_v, mix_v) %>%
rename(`A/B Testing`=ab_v, `UCB`=ucb_v, `Hybrid_alg`=mix_v) %>%
gather("Algorithm", "Variance", 2:4)
df3_r <- df3 %>% select(time, ab_r, ucb_r, mix_r) %>%
rename(`A/B Testing`=ab_r, `UCB`=ucb_r, `Hybrid_alg`=mix_r) %>%
gather("Algorithm", "Squared Error of Variance", 2:4)
ggplot(df3_m, aes(time, mean)) + geom_line(aes(colour=type))
ggplot(df3_v, aes(time, variance)) + geom_line(aes(colour=type))
ggplot() + geom_line(data = df2_v, aes(time, Variance, colour=Algorithm)) +
geom_line(data = df3_v, aes(time, Variance, colour=Algorithm)) +
theme_bw() + ggsave('out_var.png', width = 8, height = 5)
ggplot() + geom_line(data = df2_r, aes(time, `Squared Error of Variance`, colour=Algorithm)) +
geom_line(data = df3_r, aes(time, `Squared Error of Variance`, colour=Algorithm)) +
theme_bw() + ggsave('out_err.png', width = 8, height = 5)
