a
c <- main_utility %>% select(iteration, actual_group, actual_value) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utilty = mean(actual_value)) %>% group_by(iteration) %>% summarise(max_actual_utilty = max(m_actual_utilty))
c
b <- main_utility %>% select(iteration, actual_value, first) %>% group_by(iteration) %>%
summarise(mean_actual_utilty = mean(actual_value), mean_hte_utility = mean(first))
b['mean_ate_utility'] = a["max_actual_utilty"]
kable(b)
b <- b %>% gather(utility_type, mean_utility,mean_actual_utilty:mean_ate_utility)
b
a <- train_utility %>% select(iteration, actual_group, actual_value) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utilty = mean(actual_value)) %>% group_by(iteration) %>% summarise(max_actual_utilty = max(m_actual_utilty))
b <- main_utility %>% select(iteration, actual_value, first) %>% group_by(iteration) %>%
summarise(m_actual_utilty = mean(actual_value), m_hte_utility = mean(first))
kable(b)
b <- b %>% group_by(iteration) %>% summarise(mean_actual_utilty = mean(m_actual_utilty),
mean_ate_utility = mean(m_ate_utility),
mean_hte_utility = mean(m_hte_utility),
sd_actual_utility = sd(m_actual_utilty),
sd_ate_utility = sd(m_ate_utility),
sd_hte_utility = sd(m_hte_utility))
b <- b %>% group_by(iteration) %>% summarise(mean_actual_utilty = mean(m_actual_utilty),
mean_ate_utility = mean(m_ate_utility),
mean_hte_utility = mean(m_hte_utility),
sd_actual_utility = sd(m_actual_utilty),
sd_ate_utility = sd(m_ate_utility),
sd_hte_utility = sd(m_hte_utility))
b['m_ate_utility'] = a["max_actual_utilty"]
function (.data, ..., add = FALSE)
b <- b %>% group_by(iteration) %>% summarise(mean_actual_utilty = mean(m_actual_utilty),
mean_ate_utility = mean(m_ate_utility),
mean_hte_utility = mean(m_hte_utility),
sd_actual_utility = sd(m_actual_utilty),
sd_ate_utility = sd(m_ate_utility),
sd_hte_utility = sd(m_hte_utility))
b <- b %>% gather(utility_type, mean_utility,mean_actual_utilty:mean_ate_utility)
b <- b %>% gather(utility_type, mean_utility, mean_actual_utilty:mean_hte_utility)
b <- b %>% group_by(iteration) %>% summarise(mean_actual_utilty = mean(m_actual_utilty),
mean_ate_utility = mean(m_ate_utility),
mean_hte_utility = mean(m_hte_utility),
sd_actual_utility = sd(m_actual_utilty),
sd_ate_utility = sd(m_ate_utility),
sd_hte_utility = sd(m_hte_utility))
b
b <- main_utility %>% select(iteration, actual_value, first) %>% group_by(iteration) %>%
summarise(m_actual_utilty = mean(actual_value), m_hte_utility = mean(first))
b['m_ate_utility'] = a["max_actual_utilty"]
b
b <- b %>% summarise(mean_actual_utilty = mean(m_actual_utilty),
mean_ate_utility = mean(m_ate_utility),
mean_hte_utility = mean(m_hte_utility),
sd_actual_utility = sd(m_actual_utilty),
sd_ate_utility = sd(m_ate_utility),
sd_hte_utility = sd(m_hte_utility))
b
b <- b %>% gather(utility_type, mean_utility, mean_actual_utilty:mean_hte_utility)
b <- b %>% gather(utility_type, mean_utility, mean_actual_utilty:mean_hte_utility)
b <- b %>% summarise(mean_actual_utilty = mean(m_actual_utilty),
mean_ate_utility = mean(m_ate_utility),
mean_hte_utility = mean(m_hte_utility),
sd_actual_utility = sd(m_actual_utilty),
sd_ate_utility = sd(m_ate_utility),
sd_hte_utility = sd(m_hte_utility))
b <- main_utility %>% select(iteration, actual_value, first) %>% group_by(iteration) %>%
summarise(m_actual_utilty = mean(actual_value), m_hte_utility = mean(first))
b['m_ate_utility'] = a["max_actual_utilty"]
b <- b %>% summarise(mean_actual_utilty = mean(m_actual_utilty),
mean_ate_utility = mean(m_ate_utility),
mean_hte_utility = mean(m_hte_utility),
sd_actual_utility = sd(m_actual_utilty),
sd_ate_utility = sd(m_ate_utility),
sd_hte_utility = sd(m_hte_utility))
b <- b %>% gather(utility_type, mean_utility, mean_actual_utilty:mean_hte_utility)
c <- c %>% gather(utility_type, sd_utility,sd_actual_utilty:sd_ate_utility)
b <- main_utility %>% select(iteration, actual_value, first) %>% group_by(iteration) %>%
summarise(m_actual_utilty = mean(actual_value), m_hte_utility = mean(first))
d <- b %>% gather(utility_type, sd_utility,sd_actual_utilty:sd_ate_utility)
b
b <- b %>% summarise(mean_actual_utilty = mean(m_actual_utilty),
mean_ate_utility = mean(m_ate_utility),
mean_hte_utility = mean(m_hte_utility),
sd_actual_utility = sd(m_actual_utilty),
sd_ate_utility = sd(m_ate_utility),
sd_hte_utility = sd(m_hte_utility))
a <- train_utility %>% select(iteration, actual_group, actual_value) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utilty = mean(actual_value)) %>% group_by(iteration) %>% summarise(max_actual_utilty = max(m_actual_utilty))
b <- main_utility %>% select(iteration, actual_value, first) %>% group_by(iteration) %>%
summarise(m_actual_utilty = mean(actual_value), m_hte_utility = mean(first))
b['m_ate_utility'] = a["max_actual_utilty"]
b <- b %>% summarise(mean_actual_utilty = mean(m_actual_utilty),
mean_ate_utility = mean(m_ate_utility),
mean_hte_utility = mean(m_hte_utility),
sd_actual_utility = sd(m_actual_utilty),
sd_ate_utility = sd(m_ate_utility),
sd_hte_utility = sd(m_hte_utility))
c <- b %>% gather(utility_type, mean_utility, mean_actual_utilty:mean_hte_utility)
d <- b %>% gather(utility_type, sd_utility,sd_actual_utilty:sd_ate_utility)
b
d <- b %>% gather(utility_type, sd_utility, sd_actual_utilty:sd_hte_utility)
b <- b %>% summarise(mean_actual_utilty = mean(m_actual_utilty),
mean_ate_utility = mean(m_ate_utility),
mean_hte_utility = mean(m_hte_utility))
a <- train_utility %>% select(iteration, actual_group, actual_value) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utilty = mean(actual_value)) %>% group_by(iteration) %>% summarise(max_actual_utilty = max(m_actual_utilty))
b <- main_utility %>% select(iteration, actual_value, first) %>% group_by(iteration) %>%
summarise(m_actual_utilty = mean(actual_value), m_hte_utility = mean(first))
b['m_ate_utility'] = a["max_actual_utilty"]
b <- b %>% summarise(mean_actual_utilty = mean(m_actual_utilty),
mean_ate_utility = mean(m_ate_utility),
mean_hte_utility = mean(m_hte_utility))
c <- c %>% summarise(sd_actual_utility = sd(m_actual_utilty),
sd_ate_utility = sd(m_ate_utility),
sd_hte_utility = sd(m_hte_utility))
a <- train_utility %>% select(iteration, actual_group, actual_value) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utilty = mean(actual_value)) %>% group_by(iteration) %>% summarise(max_actual_utilty = max(m_actual_utilty))
b <- main_utility %>% select(iteration, actual_value, first) %>% group_by(iteration) %>%
summarise(m_actual_utilty = mean(actual_value), m_hte_utility = mean(first))
b['m_ate_utility'] = a["max_actual_utilty"]
c <- b %>% summarise(mean_actual_utilty = mean(m_actual_utilty),
mean_ate_utility = mean(m_ate_utility),
mean_hte_utility = mean(m_hte_utility))
d <- b %>% summarise(sd_actual_utility = sd(m_actual_utilty),
sd_ate_utility = sd(m_ate_utility),
sd_hte_utility = sd(m_hte_utility))
c
c <- c %>% gather(utility_type, mean_utility, mean_actual_utilty:mean_hte_utility)
d <- d %>% gather(utility_type, sd_utility, sd_actual_utilty:sd_hte_utility)
d
d <- b %>% summarise(sd_actual_utility = sd(m_actual_utilty),
sd_ate_utility = sd(m_ate_utility),
sd_hte_utility = sd(m_hte_utility)) %>% gather(utility_type, sd_utility, sd_actual_utilty:sd_hte_utility)
d <- b %>% summarise(sd_actual_utility = sd(m_actual_utilty),
sd_ate_utility = sd(m_ate_utility),
sd_hte_utility = sd(m_hte_utility)) %>% gather(utility_type, sd_utility, sd_actual_utility:sd_hte_utility)
c <- b %>% summarise(mean_actual_utilty = mean(m_actual_utilty),
mean_ate_utility = mean(m_ate_utility),
mean_hte_utility = mean(m_hte_utility)) %>% gather(utility_type, mean_utility, mean_actual_utilty:mean_hte_utility)
d <- b %>% summarise(sd_actual_utility = sd(m_actual_utilty),
sd_ate_utility = sd(m_ate_utility),
sd_hte_utility = sd(m_hte_utility)) %>% gather(utility_type, sd_utility, sd_actual_utility:sd_hte_utility)
c
d
c["sd_utility"] = d$sd_utility
c
a <- train_utility %>% select(iteration, actual_group, actual_value) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utilty = mean(actual_value)) %>% group_by(iteration) %>% summarise(max_actual_utilty = max(m_actual_utilty))
b <- main_utility %>% select(iteration, actual_value, first) %>% group_by(iteration) %>%
summarise(m_actual_utilty = mean(actual_value), m_hte_utility = mean(first))
b['m_ate_utility'] = a["max_actual_utilty"]
c <- b %>% summarise(mean_actual_utilty = mean(m_actual_utilty),
mean_ate_utility = mean(m_ate_utility),
mean_hte_utility = mean(m_hte_utility)) %>% gather(utility_type, mean_utility, mean_actual_utilty:mean_hte_utility)
d <- b %>% summarise(sd_actual_utility = sd(m_actual_utilty),
sd_ate_utility = sd(m_ate_utility),
sd_hte_utility = sd(m_hte_utility)) %>% gather(utility_type, sd_utility, sd_actual_utility:sd_hte_utility)
c["sd_utility"] = d$sd_utility
ggplot(b,aes(utility_type,mean_utility))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=mean_utility-sd_utility, ymax=mean_utility+sd_utility),width=.2,position=position_dodge(.9)) +
labs(x = "Utility_type", y = "Mean Utility in RMB", title ="Graph of Utility_type Vs. Mean realised utility")+   ggsave("Graph of Utility_type Vs. Mean realised utility.png", width = 8, height = 5)
c <- b %>% summarise(mean_actual_utilty = mean(m_actual_utilty),
mean_ate_utility = mean(m_ate_utility),
mean_hte_utility = mean(m_hte_utility)) %>% gather(utility_type, mean_utility, mean_actual_utilty:mean_hte_utility)
d <- b %>% summarise(sd_actual_utility = sd(m_actual_utilty),
sd_ate_utility = sd(m_ate_utility),
sd_hte_utility = sd(m_hte_utility)) %>% gather(utility_type, sd_utility, sd_actual_utility:sd_hte_utility)
c["sd_utility"] = d$sd_utility
c
ggplot(c,aes(utility_type,mean_utility))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=mean_utility-sd_utility, ymax=mean_utility+sd_utility),width=.2,position=position_dodge(.9)) +
labs(x = "Utility_type", y = "Mean Utility in RMB", title ="Graph of Utility_type Vs. Mean realised utility")+   ggsave("Graph of Utility_type Vs. Mean realised utility.png", width = 8, height = 5)
?qnorm
qnorm(0.05)
qnorm(0.95)
suppressPackageStartupMessages({
library(dplyr)
library(tidyr)
library(knitr)
library(ggplot2)}
)
setwd("C:\\Users\\Sandeep kumar\\Google Drive\\Ed Research\\optimal-hte\\Code\\applications\\donor\\output")
main_utility <- read.csv("don_utility.csv")
main_benefit <- read.csv("don_benefit.csv")
main_cost <- read.csv("don_cost.csv")
train_utility <- read.csv("don_train_utility.csv")
optimization_results <- read.csv("don_optimization_results.csv")
# Average actual Vs. optimal utility per group
a <- main_utility %>% select(iteration, actual_group, actual_value, first) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utility = mean(actual_value), m_optimal_utility = mean(first)) %>%
ungroup() %>% group_by(actual_group) %>%
summarise(mean_actual_utility = mean(m_actual_utility), mean_optimal_utility = mean(m_optimal_utility),
sd_actual_utility = sd(m_actual_utility), sd_optimal_utility = sd(m_optimal_utility))
kable(a)
a <- main_utility %>% select(iteration, actual_group, actual_value, first) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utility = mean(actual_value), m_optimal_utility = mean(first)) %>%
ungroup() %>% group_by(actual_group) %>%
summarise(mean_actual_utility = mean(m_actual_utility), mean_optimal_utility = mean(m_optimal_utility)) %>%
gather(utility_type, utility, mean_actual_utility: mean_optimal_utility)
b <- main_utility %>% select(iteration, actual_group, actual_value, first) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utility = mean(actual_value), m_optimal_utility = mean(first)) %>%
ungroup() %>% group_by(actual_group) %>%
summarise(se_actual_utility = sd(m_actual_utility)/sqrt(n), se_optimal_utility = se(m_optimal_utility)/sqrt(n)) %>%
gather(utility_type, utility, se_actual_utility: se_optimal_utility)
# Average actual Vs. optimal utility per group
a <- main_utility %>% select(iteration, actual_group, actual_value, first) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utility = mean(actual_value), m_optimal_utility = mean(first)) %>%
ungroup() %>% group_by(actual_group) %>%
summarise(mean_actual_utility = mean(m_actual_utility), mean_optimal_utility = mean(m_optimal_utility),
sd_actual_utility = sd(m_actual_utility), sd_optimal_utility = sd(m_optimal_utility))
kable(a)
a <- main_utility %>% select(iteration, actual_group, actual_value, first) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utility = mean(actual_value), m_optimal_utility = mean(first)) %>%
ungroup() %>% group_by(actual_group) %>%
summarise(mean_actual_utility = mean(m_actual_utility), mean_optimal_utility = mean(m_optimal_utility)) %>%
gather(utility_type, utility, mean_actual_utility: mean_optimal_utility)
b <- main_utility %>% select(iteration, actual_group, actual_value, first) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utility = mean(actual_value), m_optimal_utility = mean(first)) %>%
ungroup() %>% group_by(actual_group) %>%
summarise(se_actual_utility = sd(m_actual_utility)/sqrt(n), se_optimal_utility = sd(m_optimal_utility)/sqrt(n)) %>%
gather(utility_type, utility, se_actual_utility: se_optimal_utility)
# Average actual Vs. optimal utility per group
a <- main_utility %>% select(iteration, actual_group, actual_value, first) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utility = mean(actual_value), m_optimal_utility = mean(first)) %>%
ungroup() %>% group_by(actual_group) %>%
summarise(mean_actual_utility = mean(m_actual_utility), mean_optimal_utility = mean(m_optimal_utility),
sd_actual_utility = sd(m_actual_utility), sd_optimal_utility = sd(m_optimal_utility))
kable(a)
a <- main_utility %>% select(iteration, actual_group, actual_value, first) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utility = mean(actual_value), m_optimal_utility = mean(first)) %>%
ungroup() %>% group_by(actual_group) %>%
summarise(mean_actual_utility = mean(m_actual_utility), mean_optimal_utility = mean(m_optimal_utility)) %>%
gather(utility_type, utility, mean_actual_utility: mean_optimal_utility)
b <- main_utility %>% select(iteration, actual_group, actual_value, first) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utility = mean(actual_value), m_optimal_utility = mean(first)) %>%
ungroup() %>% group_by(actual_group) %>%
summarise(se_actual_utility = sd(m_actual_utility)/sqrt(n()), se_optimal_utility = sd(m_optimal_utility)/sqrt(n())) %>%
gather(utility_type, utility, se_actual_utility: se_optimal_utility)
a["se"] = b$utility
ggplot(a,aes(actual_group,utility,fill=utility_type))+
geom_bar(stat="identity",position="dodge")+
geom_errorbar(aes(ymin=utility+se*qnorm(0.025), ymax=utility+se*qnorm(0.975)),width=.2,position=position_dodge(.9)) +
labs(x = "Treatment_group", y = "Utility in RMB", title ="Graph of Average Actual Utility and Average Predicted Optimal Utility (CI)") +   ggsave("Graph of Average Actual Utility and Average Predicted Optimal Utility(CI).png", width = 8, height = 5)
a <- train_utility %>% select(iteration, actual_group, actual_value) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utilty = mean(actual_value)) %>% group_by(iteration) %>% summarise(max_actual_utilty = max(m_actual_utilty))
b <- main_utility %>% select(iteration, actual_value, first) %>% group_by(iteration) %>%
summarise(m_actual_utilty = mean(actual_value), m_hte_utility = mean(first))
b['m_ate_utility'] = a["max_actual_utilty"]
c <- b %>% summarise(mean_actual_utilty = mean(m_actual_utilty),
mean_ate_utility = mean(m_ate_utility),
mean_hte_utility = mean(m_hte_utility)) %>% gather(utility_type, mean_utility, mean_actual_utilty:mean_hte_utility)
d <- b %>% summarise(se_actual_utility = sd(m_actual_utilty)/sqrt(n()),
se_ate_utility = sd(m_ate_utility)/sqrt(n()),
se_hte_utility = sd(m_hte_utility)/sqrt(n())) %>% gather(utility_type, se_utility, se_actual_utility:se_hte_utility)
c["sd_utility"] = d$se_utility
ggplot(c,aes(utility_type,mean_utility))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=mean_utility+se*qnorm(0.025), ymax=mean_utility+se*qnorm(0.975)),width=.2,position=position_dodge(.9)) +
labs(x = "Utility_type", y = "Mean Utility in RMB", title ="Graph of Utility_type Vs. Mean realised utility")+   ggsave("Graph of Utility_type Vs. Mean realised utility(CI).png", width = 8, height = 5)
a <- train_utility %>% select(iteration, actual_group, actual_value) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utilty = mean(actual_value)) %>% group_by(iteration) %>% summarise(max_actual_utilty = max(m_actual_utilty))
b <- main_utility %>% select(iteration, actual_value, first) %>% group_by(iteration) %>%
summarise(m_actual_utilty = mean(actual_value), m_hte_utility = mean(first))
b['m_ate_utility'] = a["max_actual_utilty"]
c <- b %>% summarise(mean_actual_utilty = mean(m_actual_utilty),
mean_ate_utility = mean(m_ate_utility),
mean_hte_utility = mean(m_hte_utility)) %>% gather(utility_type, mean_utility, mean_actual_utilty:mean_hte_utility)
d <- b %>% summarise(se_actual_utility = sd(m_actual_utilty)/sqrt(n()),
se_ate_utility = sd(m_ate_utility)/sqrt(n()),
se_hte_utility = sd(m_hte_utility)/sqrt(n())) %>% gather(utility_type, se_utility, se_actual_utility:se_hte_utility)
c["sd_utility"] = d$se_utility
ggplot(c,aes(utility_type,mean_utility))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=mean_utility+se_utility*qnorm(0.025), ymax=mean_utility+se_utility*qnorm(0.975)),width=.2,position=position_dodge(.9)) +
labs(x = "Utility_type", y = "Mean Utility in RMB", title ="Graph of Utility_type Vs. Mean realised utility")+   ggsave("Graph of Utility_type Vs. Mean realised utility(CI).png", width = 8, height = 5)
a <- train_utility %>% select(iteration, actual_group, actual_value) %>% group_by(iteration, actual_group) %>%
summarise(m_actual_utilty = mean(actual_value)) %>% group_by(iteration) %>% summarise(max_actual_utilty = max(m_actual_utilty))
b <- main_utility %>% select(iteration, actual_value, first) %>% group_by(iteration) %>%
summarise(m_actual_utilty = mean(actual_value), m_hte_utility = mean(first))
b['m_ate_utility'] = a["max_actual_utilty"]
c <- b %>% summarise(mean_actual_utilty = mean(m_actual_utilty),
mean_ate_utility = mean(m_ate_utility),
mean_hte_utility = mean(m_hte_utility)) %>% gather(utility_type, mean_utility, mean_actual_utilty:mean_hte_utility)
d <- b %>% summarise(se_actual_utility = sd(m_actual_utilty)/sqrt(n()),
se_ate_utility = sd(m_ate_utility)/sqrt(n()),
se_hte_utility = sd(m_hte_utility)/sqrt(n())) %>% gather(utility_type, se_utility, se_actual_utility:se_hte_utility)
c["se_utility"] = d$se_utility
ggplot(c,aes(utility_type,mean_utility))+
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=mean_utility+se_utility*qnorm(0.025), ymax=mean_utility+se_utility*qnorm(0.975)),width=.2,position=position_dodge(.9)) +
labs(x = "Utility_type", y = "Mean Utility in RMB", title ="Graph of Utility_type Vs. Mean realised utility")+   ggsave("Graph of Utility_type Vs. Mean realised utility(CI).png", width = 8, height = 5)
data <- optimization_results
#data <- rbind(data1, data2)
data <- data %>% group_by(budget) %>% summarise_each(funs(mean,sd,se=sd(.)/sqrt(n()))) %>% ungroup()
data <- data %>% mutate(ate_milp = ate_mean-milp_mean, greedy_milp = greedy_mean-milp_mean,
ate_greedy = ate_mean-greedy_mean, milp_greedy = milp_mean-greedy_mean,
greedy_ate = greedy_mean-ate_mean, milp_ate = milp_mean-ate_mean)
data <- data %>% mutate(ate_milp_p = ((ate_mean-milp_mean)/milp_mean)*100, greedy_milp_p = ((greedy_mean-milp_mean)/milp_mean)*100,
ate_greedy_p = ((ate_mean-greedy_mean)/(greedy_mean+1))*100, milp_greedy_p = ((milp_mean-greedy_mean)/(greedy_mean+1))*100,
greedy_ate_p = ((greedy_mean-ate_mean)/ate_mean)*100, milp_ate_p = ((milp_mean-ate_mean)/ate_mean)*100)
#
# ggplot() +
#   geom_line(data=data, aes(budget, ate_milp, colour="ATE")) +
#   geom_line(data=data, aes(budget, greedy_milp, colour="GREEDY")) +
#   labs(x = "Budget in RMB", y = "Utility in RMB", title ="Graph of Budget Vs. Increased Utility (MILP Baseline)", color='Allocation Methods') +
#   ggsave("plot_utility_milp.png", width = 8, height = 5)
#
# ggplot() +
#   geom_line(data=data, aes(budget, ate_greedy, colour="ATE")) +
#   geom_line(data=data, aes(budget, milp_greedy, colour="MILP")) +
#   labs(x = "Budget in RMB", y = "Utility in RMB", title ="Graph of Budget Vs. Increased Utility (GREEDY Baseline)", color='Allocation Methods') +
#   ggsave("plot_utility_greedy.png", width = 8, height = 5)
#
# ggplot() +
#   geom_line(data=data, aes(budget, greedy_ate, colour="GREEDY")) +
#   geom_line(data=data, aes(budget, milp_ate, colour="MILP")) +
#   labs(x = "Budget in RMB", y = "Utility in RMB", title ="Graph of Budget Vs. Increased Utility (ATE Baseline)", color='Allocation Methods') +
#   ggsave("plot_utility_ate.png", width = 8, height = 5)
#
# ggplot() +
#   geom_line(data=data, aes(budget, ate_milp_p, colour="ATE")) +
#   geom_line(data=data, aes(budget, greedy_milp_p, colour="GREEDY")) +
#   labs(x = "Budget in RMB", y = "Utility in RMB", title ="Graph of Budget Vs. Perc. Inc in Utility (MILP Baseline)", color='Allocation Methods') +
#   ggsave("plot_utility_milp_p.png", width = 8, height = 5)
#
# ggplot() +
#   geom_line(data=data, aes(budget, ate_greedy_p, colour="ATE")) +
#   geom_line(data=data, aes(budget, milp_greedy_p, colour="MILP")) +
#   labs(x = "Budget in RMB", y = "Utility in RMB", title ="Graph of Budget Vs. Perc. Inc in Utility (GREEDY Baseline)", color='Allocation Methods') +
#   ggsave("plot_utility_greedy_p.png", width = 8, height = 5)
#
# ggplot() +
#   geom_line(data=data, aes(budget, greedy_ate_p, colour="GREEDY")) +
#   geom_line(data=data, aes(budget, milp_ate_p, colour="MILP")) +
#   labs(x = "Budget in RMB", y = "Utility in RMB", title ="Graph of Budget Vs. Perc. Inc in Utility (ATE Baseline)", color='Allocation Methods') +
#   ggsave("plot_utility_ate_p.png", width = 8, height = 5)
ggplot() +
geom_line(data=data, aes(budget, greedy_mean, colour="Greedy")) +
geom_ribbon(data=data, aes(x=budget, y=greedy_mean,ymin=greedy_mean+greedy_se*qnorm(0.025), ymax=greedy_mean+greedy_se*qnorm(0.975)), alpha=0.2, fill = "grey70") +
geom_line(data=data, aes(budget, milp_mean, colour="MILP")) +
geom_ribbon(data=data, aes(x=budget, y=milp_mean,ymin=milp_mean+milp_se*qnorm(0.025), ymax=milp_mean+milp_se*qnorm(0.975)), alpha=0.2, fill = "grey70") +
geom_line(data=data, aes(budget, ate_mean, colour="ATE")) +
geom_ribbon(data=data, aes(x=budget, y=ate_mean,ymin=ate_mean+ate_se*qnorm(0.025), ymax=ate_mean+ate_se*qnorm(0.975)), alpha=0.2, fill = "grey70") +
labs(x = "Budget in RMB", y = "Utility in RMB", title ="Graph of Budget Vs. Utility(CI)", color='Allocation Methods') +
ggsave("plot_utility(CI).png", width = 8, height = 5)
ggplot() +
geom_line(data=data, aes(budget, n_greedy_mean, colour="Greedy")) +
geom_ribbon(data=data, aes(x=budget, y=n_greedy_mean,ymin=n_greedy_mean+n_greedy_se*qnorm(0.025), ymax=n_greedy_mean+n_greedy_se*qnorm(0.975)), alpha=0.2, fill = "grey70") +
geom_line(data=data, aes(budget, n_milp_mean, colour="MILP")) +
geom_ribbon(data=data, aes(x=budget, y=n_milp_mean,ymin=n_milp_mean+n_milp_se*qnorm(0.025), ymax=n_milp_mean+n_milp_se*qnorm(0.975)), alpha=0.2, fill = "grey70") +
geom_line(data=data, aes(budget, n_ate_mean, colour="ATE")) +
geom_ribbon(data=data, aes(x=budget, y=n_ate_mean,ymin=n_ate_mean+n_ate_se*qnorm(0.025), ymax=n_ate_mean+n_ate_se*qnorm(0.975)), alpha=0.2, fill = "grey70") +
labs(x = "Budget in RMB", y = "No. of Users served", title ="Graph of Budget Vs. No. of Users served(CI)", color='Allocation Methods') +
ggsave("plot_users(CI).png", width = 8, height = 5)
#
# ggplot() +
#   geom_line(data=data, aes(budget, n_greedy_mean, colour="Greedy")) +
#   geom_ribbon(data=data, aes(x=budget, y=n_greedy_mean,ymin=n_greedy_mean+n_greedy_sd, ymax=n_greedy_mean-n_greedy_sd), alpha=0.2, fill = "grey70") +
#   geom_line(data=data, aes(budget, n_ate_mean, colour="ATE")) +
#   geom_ribbon(data=data, aes(x=budget, y=n_ate_mean,ymin=n_ate_mean+n_ate_sd, ymax=n_ate_mean-n_ate_sd), alpha=0.2, fill = "grey70") +
#   labs(x = "Budget in RMB", y = "No. of Users served", title ="Graph of Budget Vs. No. of Users served", color='Allocation Methods') +
#   ggsave("plot_users_2.png", width = 8, height = 5)
#
data <- optimization_results
#data <- rbind(data1, data2)
data <- data %>% group_by(budget) %>% summarise_each(funs(mean,sd)) %>% ungroup()
data <- data %>% filter(budget%%2000==0) %>% select(-c(X_mean,X_sd))
kable(data)
suppressPackageStartupMessages({
library(TSA)
library(forecast)
library(ggplot2)
library(dplyr)
})
df$arm
df <- read.csv("var.csv")
df_var <- df %>% select(arm, ab_var, ucb_var, eps_var, mix_var) %>% rename(`AB_testing` = ab_var,
`UCB` = ucb_var,
`e-greedy` = eps_var,
`UCB-VAR` = mix_var) %>%
gather("type", "var", 2:5)
df_var[is.na(df_var)] <- 0
df_var$x = rep(rep(1:2000, each=10),4)
true_var = c(4.03757288,3.43165603,0.46557525,0.9803696,3.53352318,3.54460421, 4.56793121,1.04190155, 0.7491534,  3.0408862)
df_var$true_var = rep(true_var, 8000)
df_var$arm = as.factor(df_var$arm)
ggplot(df_var) + geom_point(aes(x=x, y=var, color=type), size=0.3) + geom_hline(aes(yintercept=true_var)) +
facet_wrap(~arm, nrow=5) + theme_bw() +
labs(x='Time Period', y = 'Variance Estimate', color="Allocation Type") +
theme(axis.text.y = element_text(size = 6)) +
ggsave("var.png", width = 8, height = 8)
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggrepel)
df <- read.csv("var.csv")
df_var <- df %>% select(arm, ab_var, ucb_var, eps_var, mix_var) %>% rename(`AB_testing` = ab_var,
`UCB` = ucb_var,
`e-greedy` = eps_var,
`UCB-VAR` = mix_var) %>%
gather("type", "var", 2:5)
df_var[is.na(df_var)] <- 0
df_var$x = rep(rep(1:2000, each=10),4)
true_var = c(4.03757288,3.43165603,0.46557525,0.9803696,3.53352318,3.54460421, 4.56793121,1.04190155, 0.7491534,  3.0408862)
df_var$true_var = rep(true_var, 8000)
df_var$arm = as.factor(df_var$arm)
ggplot(df_var) + geom_point(aes(x=x, y=var, color=type), size=0.3) + geom_hline(aes(yintercept=true_var)) +
facet_wrap(~arm, nrow=5) + theme_bw() +
labs(x='Time Period', y = 'Variance Estimate', color="Allocation Type") +
theme(axis.text.y = element_text(size = 6)) +
ggsave("var.png", width = 8, height = 8)
df <- read.csv("var.csv")
setwd("G:\\My Drive\\Research\\Contextual Bandits\\code\\bandits\\MAB_VAR")
df <- read.csv("var.csv")
df_var <- df %>% select(arm, ab_var, ucb_var, eps_var, mix_var) %>% rename(`AB_testing` = ab_var,
`UCB` = ucb_var,
`e-greedy` = eps_var,
`UCB-VAR` = mix_var) %>%
gather("type", "var", 2:5)
df_var[is.na(df_var)] <- 0
df_var$x = rep(rep(1:2000, each=10),4)
true_var = c(4.03757288,3.43165603,0.46557525,0.9803696,3.53352318,3.54460421, 4.56793121,1.04190155, 0.7491534,  3.0408862)
df_var$true_var = rep(true_var, 8000)
df_var$arm
'arm' + df$arm
paste('arm ', df$arm)
df_var$arm = paste("arm ",df_var$arm)
ggplot(df_var) + geom_point(aes(x=x, y=var, color=type), size=0.3) + geom_hline(aes(yintercept=true_var)) +
facet_wrap(~arm, nrow=5) + theme_bw() +
labs(x='Time Period', y = 'Variance Estimate', color="Allocation Type") +
ggsave("var.png", width = 8, height = 8)
theme(axis.text.y = element_text(size = 6)) +
ggplot(df_var) + geom_point(aes(x=x, y=var, color=type), size=0.3) + geom_hline(aes(yintercept=true_var)) +
facet_wrap(~arm, nrow=5) + theme_bw() +
labs(x='Time Period', y = 'Variance Estimate', color="Allocation Type") +
theme(axis.text.y = element_text(size = 6)) +
ggsave("var.png", width = 8, height = 8) + theme(legend.position="bottom")
?theme
ggplot(df_var) + geom_point(aes(x=x, y=var, color=type), size=0.3) + geom_hline(aes(yintercept=true_var)) +
facet_wrap(~arm, nrow=5) + theme_bw() +
labs(x='Time Period', y = 'Variance Estimate', color="Allocation Type") +  theme(legend.position="bottom")+
theme(axis.text.y = element_text(size = 6)) +
ggsave("var.png", width = 8, height = 8)
ggsave("var.png", width = 8, height = 10)
ggplot(df_var) + geom_point(aes(x=x, y=var, color=type), size=0.3) + geom_hline(aes(yintercept=true_var)) +
facet_wrap(~arm, nrow=5) + theme_bw() +
labs(x='Time Period', y = 'Variance Estimate', color="Allocation Type") +  theme(legend.position="bottom")+
theme(axis.text.y = element_text(size = 6)) +
ggsave("var.png", width = 8, height = 10)
ggplot(df_var) + geom_point(aes(x=x, y=var, color=type), size=0.3) + geom_hline(aes(yintercept=true_var)) +
facet_wrap(~arm, nrow=5) + theme_bw() +
labs(x='Time Period', y = 'Variance Estimate', color="Allocation Type") +  theme(legend.position="bottom")+
theme(axis.text.y = element_text(size = 6)) +
ggsave("var.png", width = 8, height = 12)
ggplot(df_var) + geom_point(aes(x=x, y=var, color=type), size=0.3) + geom_hline(aes(yintercept=true_var)) +
facet_wrap(~arm, nrow=5) + theme_bw() +
labs(x='Time Period', y = 'Variance Estimate', color="Allocation Type") +  theme(legend.position="bottom")+
theme(axis.text.y = element_text(size = 6)) +
ggsave("var.png", width = 8, height = 10)
?guides
ggplot(df_var) + geom_point(aes(x=x, y=var, color=type), size=0.3) + geom_hline(aes(yintercept=true_var)) +
facet_wrap(~arm, nrow=5) + theme_bw() +
labs(x='Time Period', y = 'Variance Estimate', color="Allocation Type") +  theme(legend.position="bottom")+
theme(axis.text.y = element_text(size = 6)) + guides(colour = guide_legend(override.aes = list(alpha = 1))) +
ggsave("var.png", width = 8, height = 10)
ggplot(df_var) + geom_point(aes(x=x, y=var, color=type), size=0.3) + geom_hline(aes(yintercept=true_var)) +
facet_wrap(~arm, nrow=5) + theme_bw() +
labs(x='Time Period', y = 'Variance Estimate', color="Allocation Type") +  theme(legend.position="bottom")+
theme(axis.text.y = element_text(size = 6)) + guides(colour = guide_legend(override.aes = list(size = 1))) +
ggsave("var.png", width = 8, height = 10)
ggplot(df_var) + geom_point(aes(x=x, y=var, color=type), size=0.3) + geom_hline(aes(yintercept=true_var)) +
facet_wrap(~arm, nrow=5) + theme_bw() +
labs(x='Time Period', y = 'Variance Estimate', color="Allocation Type") +  theme(legend.position="bottom")+
theme(axis.text.y = element_text(size = 6)) + guides(colour = guide_legend(override.aes = list(size = 2, shape=2))) +
ggsave("var.png", width = 8, height = 10)
ggplot(df_var) + geom_point(aes(x=x, y=var, color=type), size=0.3) + geom_hline(aes(yintercept=true_var)) +
facet_wrap(~arm, nrow=5) + theme_bw() +
labs(x='Time Period', y = 'Variance Estimate', color="Allocation Type") +  theme(legend.position="bottom")+
theme(axis.text.y = element_text(size = 6)) + guides(colour = guide_legend(override.aes = list(size = 2)))
ggplot(df_var) + geom_point(aes(x=x, y=var, color=type), size=0.3) + geom_hline(aes(yintercept=true_var)) +
facet_wrap(~arm, nrow=5) + theme_bw() +
labs(x='Time Period', y = 'Variance Estimate', color="Allocation Type") +  theme(legend.position="bottom")+
theme(axis.text.y = element_text(size = 6)) + guides(colour = guide_legend(override.aes = list(size = 2))) +
ggsave("var.png", width = 8, height = 10)
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggrepel)
setwd("G:\\My Drive\\Research\\Contextual Bandits\\code\\bandits\\MAB_VAR")
df <- read.csv("output.csv")
df$x = 1:nrow(df)
df_regret <- df %>% select(x, ab_regret, ucb_regret, eps_regret, mix_regret)  %>% rename(`AB_testing` = ab_regret,
`UCB` = ucb_regret,
`e-greedy` = eps_regret,
`UCB-VAR` = mix_regret) %>%
gather("type", "regret", 2:5)
ggplot(df_regret) + geom_line(aes(x=x, y=regret, color=type))+ theme_bw()+
labs(x='Time Period', y = 'Regret', color="Allocation Type")+ ggsave("regret.png", width = 8, height = 4)
df_mean_rmse <- df %>% select(x, ab_mean_rmse, ucb_mean_rmse, eps_mean_rmse, mix_mean_rmse) %>% rename(`AB_testing` = ab_mean_rmse,
`UCB` = ucb_mean_rmse,
`e-greedy` = eps_mean_rmse,
`UCB-VAR` = mix_mean_rmse) %>%
gather("type", "mean_rmse", 2:5)
ggplot(df_mean_rmse) + geom_point(aes(x=x, y=mean_rmse, color=type), size=0.5)+ labs(x='Time Period', y = 'RMSE of Mean')+ theme_bw() +
ggsave("mean_rmse.png", width = 6, height = 4)
df_var_rmse <- df %>% select(x, ab_var_rmse, ucb_var_rmse, eps_var_rmse, mix_var_rmse) %>% rename(`AB_testing` = ab_var_rmse,
`UCB` = ucb_var_rmse,
`e-greedy` = eps_var_rmse,
`UCB-VAR` = mix_var_rmse) %>%
gather("type", "var_rmse", 2:5)
ggplot(df_var_rmse) + geom_point(aes(x=x, y=var_rmse, color=type), size=0.5)+ theme_bw()+ guides(colour = guide_legend(override.aes = list(size = 2))) +
labs(x='Time Period', y = 'RMSE of Variance', color="Allocation Type")+ ggsave("var_rmse.png", width = 8, height = 4)
